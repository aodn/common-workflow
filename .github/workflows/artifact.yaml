name: common_artifact_functions
# Common artifact function script to be share between different repo, the repo who reference it
# should refer this with a pin version or hash (@version or @<commit hash>)

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: environment
      artifact:
        required: true
        type: string
      tag:
        required: true
        type: string
      build_output:
        description: 'Use in upload-artifact to github e.g. /project/target/app.war'
        required: false
        type: string
        default: ''
      region:
        type: choice
        description: 'AWS run region default to ap-southeast-2'
        default: 'ap-southeast-2'
        required: false
        options:
          - 'ap-southeast-2'
          - 'ap-southeast-4'

# Required to get the ID Token that will be used for OIDC
permissions:
  id-token: write

jobs:
  get_upload_filename:
    name: Create upload artficate name
    runs-on: ubuntu-latest
    steps:
      - name: gen_file_name
        run: |
          filename=${{ inputs.build_output }}
          artifact=${{ inputs.artifact }}
          tag=${{ inputs.tag }}
          output="${artifact}-${tag}.${filename##*.}"
          echo "File name: $output"
          echo "::set-output name=oname::$output"

  # Upload to github with version,
  upload_artifact_github:
    runs-on: ubuntu-latest
    steps:
      - name: 'Upload to github'
        uses: actions/upload-artifact@v3
        needs: get_upload_filename
        if:
          with:
            name: ${{ needs.get_upload_filename.outputs.oname }}
            path: ${{ build_output }}
            # 'warn' or 'ignore' are also available, defaults to `warn`
            if-no-files-found: error

  # Download to github with version,
  download_artifact_github:
    runs-on: ubuntu-latest
    steps:
      - name: 'Download from github'
        needs: get_upload_filename
        uses: actions/download-artifact@v3
        if:
          with:
          # Download to current running path
          name: ${{ needs.get_upload_filename.outputs.oname }}
          # 'warn' or 'ignore' are also available, defaults to `warn`
          if-no-files-found: error

  # Use OIDC
  copy_artifact_s3:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.region }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME || secrets.OIDC_EVAL_ROLE }}
          role-session-name: 'GitHubActions-OIDC_Eval'
          role-duration-seconds: 900

      - name: Copy artifact to s3
        run: >
          aws s3 cp
          ${{ needs.get_upload_filename.outputs.oname }}
          s3://${{ secrets.AWS_ARTIFACT_BUCKET }}/promoted/${{ github.event.repository.name }}/${{ inputs.environment }}